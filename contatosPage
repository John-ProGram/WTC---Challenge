import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateListOf
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

@Composable
fun contatosPage() {

    val scrollState = rememberScrollState()

    Column(
        modifier = Modifier.fillMaxSize()
    ) {
        Column() {
            Row(
                modifier = Modifier.border(width = 3.dp, color = Color.Black)
                    .height(100.dp)
                    .fillMaxWidth()
                    .background(Color.Black)
                    .padding(10.dp),
                horizontalArrangement = Arrangement.Center,
                verticalAlignment = Alignment.Bottom
            ) {
                Text(
                    text = "Messages",
                    color = Color.White,
                    fontSize = 40.sp
                )
            }

            Column(
                modifier = Modifier.fillMaxWidth()
                    .height(500.dp)
                    .border(width = 3.dp, color = Color.Black)
                    .verticalScroll(scrollState)
            ) {
                Button(onClick = { /* ação */ }, modifier = Modifier.fillMaxWidth()) {
                    Text("Botão 1")
                }

                Spacer(modifier = Modifier.height(8.dp))

                Button(onClick = { }, modifier = Modifier.fillMaxWidth()) {
                    Text("Botão 2")
                }

                Spacer(modifier = Modifier.height(8.dp))

                // Adicione quantos botões quiser
                for (i in 3..20) {
                    Button(onClick = { }, modifier = Modifier
                        .fillMaxWidth()
                        .padding(vertical = 4.dp)) {
                        Text("Botão $i")
                    }
                }
            }
            }
        }
    }

@Preview(showBackground = true, showSystemUi = true)
@Composable
fun contatosPagePreview() {
    contatosPage()
}

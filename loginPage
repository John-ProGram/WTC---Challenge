import android.R.attr.text
import androidx.compose.foundation.BorderStroke
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.input.KeyboardCapitalization
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

@Composable
fun loginPageFunction(){

    var email by remember {
        mutableStateOf("")
    }

    var senha by remember {
        mutableStateOf("")
    }

    Column(
        modifier = Modifier.fillMaxSize()
    ) {
        Column(
            modifier = Modifier
                .padding(10.dp)
                .fillMaxSize(),
            verticalArrangement = Arrangement.Center
        ) {
            Column(

            ) {
                Card(
                    modifier = Modifier
                        .padding(10.dp)
                        .size(width = 400.dp, height = 400.dp),
                    colors = CardDefaults.cardColors(containerColor = Color.White),
                    border = BorderStroke(5.dp, Color.Black),
                    elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
                ) {
                    Column(
                        modifier = Modifier.fillMaxSize(),
                        verticalArrangement = Arrangement.Center,
                        horizontalAlignment = Alignment.CenterHorizontally,
                    ) {
                        Column {
                            Text(
                                text = "Fa√ßa seu login",
                                fontSize = 20.sp
                            )
                        }


                        Spacer(Modifier.height(5.dp))

                        Column(
                            modifier = Modifier.border(width = 3.dp, color = Color.Black)
                                .padding(5.dp)
                        ) {
                            TextField(
                                value = email,
                                onValueChange = { email = it },
                                label = { Text("EMAIL") },
                                singleLine = true
                            )

                            Spacer(Modifier.height(10.dp))

                            TextField(
                                value = senha,
                                onValueChange = { senha = it },
                                label = { Text("SENHA") },
                                singleLine = true
                            )
                        }

                    }

                }
            }
        }
    }
}

@Composable
@Preview(showBackground = true, showSystemUi = true)
fun loginPagePreview(){
    loginPageFunction()
}
